// Generated by ts-to-zod
import { z } from "../../deps/zod.ts";

export const variableSchema = z.object({
  name: z.string(),
  variableType: z.string(),
  id: z.string(),
  value: z.string(),
  minValue: z.number(),
  maxValue: z.number(),
  visible: z.boolean(),
  x: z.number(),
  y: z.number(),
  width: z.number(),
  height: z.number(),
  isCloud: z.boolean(),
  object: z.string().nullable(),
  array: z.array(
    z.object({
      data: z.string(),
    }),
  ),
});

export const messageSchema = z.object({
  name: z.string(),
  id: z.string(),
});

export const sceneSchema = z.object({
  name: z.string(),
  id: z.string(),
});

const objectSchema = z.any();

const scriptSchema = z.any();

export const functionSchema = z.object({
  id: z.string(),
  type: z.union([z.literal("normal"), z.literal("value")]),
  localVariables: z
    .array(
      z.object({
        name: z.string(),
        value: z.number(),
        id: z.string(),
      }),
    )
    .optional(),
  useLocalVariables: z.boolean(),
  content: scriptSchema,
});

export const projectSchema = z.object({
  speed: z.number(),
  objects: z.array(objectSchema),
  variables: z.array(variableSchema),
  messages: z.array(messageSchema),
  functions: z.array(functionSchema),
  scenes: z.array(sceneSchema),
});
